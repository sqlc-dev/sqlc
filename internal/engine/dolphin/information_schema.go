// Code generated by sqlc-dolphin-gen. DO NOT EDIT.

package dolphin

import (
	"github.com/sqlc-dev/sqlc/internal/sql/ast"
	"github.com/sqlc-dev/sqlc/internal/sql/catalog"
)

var funcsgenInformationSchema = []*catalog.Function{}

func genInformationSchema() *catalog.Schema {
	s := &catalog.Schema{Name: "information_schema"}
	s.Funcs = funcsgenInformationSchema
	s.Tables = []*catalog.Table{
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "USER",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTEE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTEE_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_DEFAULT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "administrable_role_authorizations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_MANDATORY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "USER",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTEE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTEE_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_DEFAULT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "applicable_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_MANDATORY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "character_sets",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "character_sets",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFAULT_COLLATE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "character_sets",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DESCRIPTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "character_sets",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MAXLEN",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "check_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "check_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "check_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "check_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHECK_CLAUSE",
					Type:      ast.TypeName{Name: "longtext"},
					IsNotNull: true,
					Length:    toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_DEFAULT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_COMPILED",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SORTLEN",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collations",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAD_ATTRIBUTE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collation_character_set_applicability",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "collation_character_set_applicability",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ORDINAL_POSITION",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_DEFAULT",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_NULLABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DATA_TYPE",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_MAXIMUM_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_OCTET_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_PRECISION",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_SCALE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATETIME_PRECISION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHARACTER_SET_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLLATION_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_TYPE",
					Type:      ast.TypeName{Name: "mediumtext"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_KEY",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "EXTRA",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PRIVILEGES",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(154),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_COMMENT",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GENERATION_EXPRESSION",
					Type:      ast.TypeName{Name: "longtext"},
					IsNotNull: true,
					Length:    toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "SRS_ID",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "columns_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "SECONDARY_ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(170),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SCHEMA_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "column_statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HISTOGRAM",
					Type:      ast.TypeName{Name: "json"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "enabled_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "enabled_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROLE_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "enabled_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_DEFAULT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "enabled_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_MANDATORY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ENGINE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SUPPORT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(2),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMMENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(26),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TRANSACTIONS",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "XA",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "engines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SAVEPOINTS",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFINER",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TIME_ZONE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_BODY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_DEFINITION",
					Type:      ast.TypeName{Name: "longtext"},
					IsNotNull: true,
					Length:    toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name: "EXECUTE_AT",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INTERVAL_VALUE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INTERVAL_FIELD",
					Type:   ast.TypeName{Name: "enum"},
					Length: toPointer(18),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SQL_MODE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(520),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name: "STARTS",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name: "ENDS",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "STATUS",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ON_COMPLETION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(12),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CREATED",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LAST_ALTERED",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name: "LAST_EXECUTED",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_COMMENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ORIGINATOR",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_CLIENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_CONNECTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "events",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATABASE_COLLATION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "FILE_ID",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "FILE_NAME",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "FILE_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLESPACE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(268),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_SCHEMA",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_NAME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "LOGFILE_GROUP_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "LOGFILE_GROUP_NUMBER",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ENGINE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "FULLTEXT_KEYS",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DELETED_ROWS",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "UPDATE_COUNT",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "FREE_EXTENTS",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "TOTAL_EXTENTS",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "EXTENT_SIZE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "INITIAL_SIZE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "MAXIMUM_SIZE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "AUTOEXTEND_SIZE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CREATION_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "LAST_UPDATE_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "LAST_ACCESS_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "RECOVER_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TRANSACTION_COUNTER",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "VERSION",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROW_FORMAT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_ROWS",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "AVG_ROW_LENGTH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DATA_LENGTH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "MAX_DATA_LENGTH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INDEX_LENGTH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATA_FREE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CREATE_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "UPDATE_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHECK_TIME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHECKSUM",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "STATUS",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "files",
			},
			Columns: []*catalog.Column{
				{
					Name:   "EXTRA",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POOL_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "BLOCK_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGE_NUMBER",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PAGE_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FLUSH_TYPE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FIX_COUNT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_HASHED",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NEWEST_MODIFICATION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "OLDEST_MODIFICATION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACCESS_TIME",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(341),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INDEX_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(341),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_RECORDS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATA_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMPRESSED_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PAGE_STATE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IO_FIX",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_OLD",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FREE_PAGE_CLOCK",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_STALE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POOL_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LRU_POSITION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGE_NUMBER",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PAGE_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FLUSH_TYPE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FIX_COUNT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_HASHED",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NEWEST_MODIFICATION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "OLDEST_MODIFICATION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACCESS_TIME",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(341),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INDEX_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(341),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_RECORDS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATA_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMPRESSED_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COMPRESSED",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IO_FIX",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_OLD",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_page_lru",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FREE_PAGE_CLOCK",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POOL_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POOL_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FREE_BUFFERS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATABASE_PAGES",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "OLD_DATABASE_PAGES",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MODIFIED_DATABASE_PAGES",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PENDING_DECOMPRESS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PENDING_READS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PENDING_FLUSH_LRU",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PENDING_FLUSH_LIST",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_MADE_YOUNG",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_NOT_MADE_YOUNG",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_MADE_YOUNG_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_MADE_NOT_YOUNG_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_PAGES_READ",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_PAGES_CREATED",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_PAGES_WRITTEN",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_READ_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_CREATE_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGES_WRITTEN_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_PAGES_GET",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HIT_RATE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "YOUNG_MAKE_PER_THOUSAND_GETS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NOT_YOUNG_MAKE_PER_THOUSAND_GETS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_PAGES_READ_AHEAD",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUMBER_READ_AHEAD_EVICTED",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "READ_AHEAD_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "READ_AHEAD_EVICTED_RATE",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LRU_IO_TOTAL",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LRU_IO_CURRENT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "UNCOMPRESS_TOTAL",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_buffer_pool_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "UNCOMPRESS_CURRENT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cached_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE_ID",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cached_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INDEX_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cached_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "N_CACHED_PAGES",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "page_size",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops_ok",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "page_size",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "buffer_pool_instance",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "pages_used",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "pages_free",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "relocation_ops",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem",
			},
			Columns: []*catalog.Column{
				{
					Name:      "relocation_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "page_size",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "buffer_pool_instance",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "pages_used",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "pages_free",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "relocation_ops",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmpmem_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "relocation_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "database_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "table_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "index_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops_ok",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "database_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "table_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "index_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops_ok",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_per_index_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "page_size",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_ops_ok",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "compress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_ops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_cmp_reset",
			},
			Columns: []*catalog.Column{
				{
					Name:      "uncompress_time",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MTYPE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRTYPE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LEN",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HAS_DEFAULT",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DEFAULT_VALUE",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_datafiles",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SPACE",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_datafiles",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PATH",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(512),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_fields",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INDEX_ID",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_fields",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_fields",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ID",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(129),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign",
			},
			Columns: []*catalog.Column{
				{
					Name:   "FOR_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(129),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign",
			},
			Columns: []*catalog.Column{
				{
					Name:   "REF_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(129),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign",
			},
			Columns: []*catalog.Column{
				{
					Name:      "N_COLS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TYPE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign_cols",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ID",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(129),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign_cols",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FOR_COL_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign_cols",
			},
			Columns: []*catalog.Column{
				{
					Name:      "REF_COL_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_foreign_cols",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_being_deleted",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_config",
			},
			Columns: []*catalog.Column{
				{
					Name:      "KEY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_config",
			},
			Columns: []*catalog.Column{
				{
					Name:      "VALUE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_default_stopword",
			},
			Columns: []*catalog.Column{
				{
					Name:      "value",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_deleted",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "WORD",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(112),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FIRST_DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LAST_DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_COUNT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_cache",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POSITION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "WORD",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(112),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FIRST_DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LAST_DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_COUNT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DOC_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_ft_index_table",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POSITION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INDEX_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TYPE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "N_FIELDS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGE_NO",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_indexes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MERGE_THRESHOLD",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SUBSYSTEM",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COUNT",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "MAX_COUNT",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "MIN_COUNT",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "AVG_COUNT",
					Type: ast.TypeName{Name: "float"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COUNT_RESET",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "MAX_COUNT_RESET",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "MIN_COUNT_RESET",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "AVG_COUNT_RESET",
					Type: ast.TypeName{Name: "float"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "TIME_ENABLED",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "TIME_DISABLED",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "TIME_ELAPSED",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name: "TIME_RESET",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "STATUS",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_metrics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMMENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ID",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PATH",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1333),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "STATE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_session_temp_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PURPOSE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(218),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FLAG",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "N_COLS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROW_FORMAT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(4),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ZIP_PAGE_SIZE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SPACE_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INSTANT_COLS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TOTAL_ROW_VERSIONS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(218),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FLAG",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROW_FORMAT",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PAGE_SIZE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ZIP_PAGE_SIZE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SPACE_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FS_BLOCK_SIZE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FILE_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ALLOCATED_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "AUTOEXTEND_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SERVER_VERSION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE_VERSION",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ENCRYPTION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces",
			},
			Columns: []*catalog.Column{
				{
					Name:   "STATE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces_brief",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SPACE",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces_brief",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(268),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces_brief",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PATH",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(512),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces_brief",
			},
			Columns: []*catalog.Column{
				{
					Name:   "FLAG",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablespaces_brief",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "STATS_INITIALIZED",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NUM_ROWS",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CLUST_INDEX_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "OTHER_INDEX_SIZE",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MODIFIED_COUNTER",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "AUTOINC",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_tablestats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "REF_COUNT",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_temp_table_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_temp_table_info",
			},
			Columns: []*catalog.Column{
				{
					Name:   "NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_temp_table_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "N_COLS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_temp_table_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPACE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_id",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_state",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(4),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_started",
					Type:      ast.TypeName{Name: "datetime"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:   "trx_requested_lock_id",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(35),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name: "trx_wait_started",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_weight",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_mysql_thread_id",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:   "trx_query",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(341),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:   "trx_operation_state",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_tables_in_use",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_tables_locked",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_lock_structs",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_lock_memory_bytes",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_rows_locked",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_rows_modified",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_concurrency_tickets",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_isolation_level",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(5),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_unique_checks",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_foreign_key_checks",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:   "trx_last_foreign_key_error",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(85),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_adaptive_hash_latched",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_adaptive_hash_timeout",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_is_read_only",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name:      "trx_autocommit_non_locking",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_trx",
			},
			Columns: []*catalog.Column{
				{
					Name: "trx_schedule_weight",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_virtual",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_virtual",
			},
			Columns: []*catalog.Column{
				{
					Name:      "POS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "innodb_virtual",
			},
			Columns: []*catalog.Column{
				{
					Name:      "BASE_POS",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "keywords",
			},
			Columns: []*catalog.Column{
				{
					Name:   "WORD",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(128),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "keywords",
			},
			Columns: []*catalog.Column{
				{
					Name: "RESERVED",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CONSTRAINT_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ORDINAL_POSITION",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name: "POSITION_IN_UNIQUE_CONSTRAINT",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:   "REFERENCED_TABLE_SCHEMA",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:   "REFERENCED_TABLE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "key_column_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:   "REFERENCED_COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "optimizer_trace",
			},
			Columns: []*catalog.Column{
				{
					Name:      "QUERY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21845),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "optimizer_trace",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TRACE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21845),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "optimizer_trace",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MISSING_BYTES_BEYOND_MAX_MEM_SIZE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "optimizer_trace",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INSUFFICIENT_PRIVILEGES",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ORDINAL_POSITION",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARAMETER_MODE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(5),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARAMETER_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DATA_TYPE",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_MAXIMUM_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_OCTET_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_PRECISION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_SCALE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATETIME_PRECISION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHARACTER_SET_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLLATION_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DTD_IDENTIFIER",
					Type:      ast.TypeName{Name: "mediumtext"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "parameters",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_TYPE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARTITION_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SUBPARTITION_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "PARTITION_ORDINAL_POSITION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "SUBPARTITION_ORDINAL_POSITION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARTITION_METHOD",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(13),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SUBPARTITION_METHOD",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(13),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARTITION_EXPRESSION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SUBPARTITION_EXPRESSION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PARTITION_DESCRIPTION",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "TABLE_ROWS",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "AVG_ROW_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATA_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "MAX_DATA_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "INDEX_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATA_FREE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CREATE_TIME",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "UPDATE_TIME",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHECK_TIME",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHECKSUM",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PARTITION_COMMENT",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "NODEGROUP",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "partitions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLESPACE_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(268),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PLUGIN_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PLUGIN_VERSION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PLUGIN_STATUS",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PLUGIN_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(26),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PLUGIN_TYPE_VERSION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PLUGIN_LIBRARY",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PLUGIN_LIBRARY_VERSION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PLUGIN_AUTHOR",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PLUGIN_DESCRIPTION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21845),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PLUGIN_LICENSE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(26),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "plugins",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LOAD_OPTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ID",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:      "USER",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(10),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HOST",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(87),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DB",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMMAND",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(5),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TIME",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:   "STATE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "processlist",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INFO",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(21845),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:      "QUERY_ID",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SEQ",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:      "STATE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(10),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DURATION",
					Type:      ast.TypeName{Name: "decimal"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "CPU_USER",
					Type: ast.TypeName{Name: "decimal"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "CPU_SYSTEM",
					Type: ast.TypeName{Name: "decimal"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "CONTEXT_VOLUNTARY",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "CONTEXT_INVOLUNTARY",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "BLOCK_OPS_IN",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "BLOCK_OPS_OUT",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "MESSAGES_SENT",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "MESSAGES_RECEIVED",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "PAGE_FAULTS_MAJOR",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "PAGE_FAULTS_MINOR",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "SWAPS",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SOURCE_FUNCTION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(10),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SOURCE_FILE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "profiling",
			},
			Columns: []*catalog.Column{
				{
					Name: "SOURCE_LINE",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CONSTRAINT_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "UNIQUE_CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "UNIQUE_CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:   "UNIQUE_CONSTRAINT_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "MATCH_OPTION",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "UPDATE_RULE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(11),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DELETE_RULE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(11),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "referential_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "REFERENCED_TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "resource_groups",
			},
			Columns: []*catalog.Column{
				{
					Name:      "RESOURCE_GROUP_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "resource_groups",
			},
			Columns: []*catalog.Column{
				{
					Name:      "RESOURCE_GROUP_TYPE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "resource_groups",
			},
			Columns: []*catalog.Column{
				{
					Name:      "RESOURCE_GROUP_ENABLED",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "resource_groups",
			},
			Columns: []*catalog.Column{
				{
					Name:   "VCPU_IDS",
					Type:   ast.TypeName{Name: "blob"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "resource_groups",
			},
			Columns: []*catalog.Column{
				{
					Name:      "THREAD_PRIORITY",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLUMN_NAME",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(31),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_column_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_SCHEMA",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_NAME",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_SCHEMA",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_NAME",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(27),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_routine_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GRANTOR_HOST",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(98),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "role_table_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_TYPE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DATA_TYPE",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_MAXIMUM_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHARACTER_OCTET_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_PRECISION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name: "NUMERIC_SCALE",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATETIME_PRECISION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHARACTER_SET_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLLATION_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DTD_IDENTIFIER",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_BODY",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(8),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROUTINE_DEFINITION",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "EXTERNAL_NAME",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EXTERNAL_LANGUAGE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PARAMETER_STYLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_DETERMINISTIC",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SQL_DATA_ACCESS",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(17),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SQL_PATH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SECURITY_TYPE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CREATED",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "LAST_ALTERED",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SQL_MODE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(520),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ROUTINE_COMMENT",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFINER",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_CLIENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_CONNECTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "routines",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATABASE_COLLATION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CATALOG_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SCHEMA_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFAULT_CHARACTER_SET_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFAULT_COLLATION_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SQL_PATH",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFAULT_ENCRYPTION",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CATALOG_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SCHEMA_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schemata_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:   "OPTIONS",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schema_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schema_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(170),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schema_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schema_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "schema_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NON_UNIQUE",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INDEX_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:   "INDEX_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SEQ_IN_INDEX",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLLATION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name: "CARDINALITY",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name: "SUB_PART",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:   "PACKED",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "NULLABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INDEX_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(11),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COMMENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(8),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "INDEX_COMMENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_VISIBLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "statistics",
			},
			Columns: []*catalog.Column{
				{
					Name:   "EXPRESSION",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "COLUMN_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SRS_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(80),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name: "SRS_ID",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_geometry_columns",
			},
			Columns: []*catalog.Column{
				{
					Name:   "GEOMETRY_TYPE_NAME",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SRS_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(80),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SRS_ID",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ORGANIZATION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name: "ORGANIZATION_COORDSYS_ID",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFINITION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(4096),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_spatial_reference_systems",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DESCRIPTION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(2048),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_units_of_measure",
			},
			Columns: []*catalog.Column{
				{
					Name:   "UNIT_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_units_of_measure",
			},
			Columns: []*catalog.Column{
				{
					Name:   "UNIT_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_units_of_measure",
			},
			Columns: []*catalog.Column{
				{
					Name: "CONVERSION_FACTOR",
					Type: ast.TypeName{Name: "double"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "st_units_of_measure",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DESCRIPTION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_TYPE",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(11),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ENGINE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "VERSION",
					Type: ast.TypeName{Name: "int"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ROW_FORMAT",
					Type:   ast.TypeName{Name: "enum"},
					Length: toPointer(10),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "TABLE_ROWS",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "AVG_ROW_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATA_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "MAX_DATA_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "INDEX_LENGTH",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "DATA_FREE",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "AUTO_INCREMENT",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CREATE_TIME",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "UPDATE_TIME",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHECK_TIME",
					Type: ast.TypeName{Name: "datetime"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_COLLATION",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name: "CHECKSUM",
					Type: ast.TypeName{Name: "bigint"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CREATE_OPTIONS",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(256),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables",
			},
			Columns: []*catalog.Column{
				{
					Name:   "TABLE_COMMENT",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tablespaces_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLESPACE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(268),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tablespaces_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "tables_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "SECONDARY_ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CONSTRAINT_NAME",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(11),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ENFORCED",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CONSTRAINT_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_constraints_extensions",
			},
			Columns: []*catalog.Column{
				{
					Name: "SECONDARY_ENGINE_ATTRIBUTE",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(170),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "table_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TRIGGER_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TRIGGER_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TRIGGER_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_MANIPULATION",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_OBJECT_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_OBJECT_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "EVENT_OBJECT_TABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_ORDER",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ACTION_CONDITION",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_STATEMENT",
					Type:      ast.TypeName{Name: "longtext"},
					IsNotNull: true,
					Length:    toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_ORIENTATION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_TIMING",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(6),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ACTION_REFERENCE_OLD_TABLE",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ACTION_REFERENCE_NEW_TABLE",
					Type:   ast.TypeName{Name: "varbinary"},
					Length: toPointer(0),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_REFERENCE_OLD_ROW",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "ACTION_REFERENCE_NEW_ROW",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CREATED",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SQL_MODE",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(520),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DEFINER",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_CLIENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_CONNECTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "triggers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "DATABASE_COLLATION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_attributes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_attributes",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_attributes",
			},
			Columns: []*catalog.Column{
				{
					Name:   "ATTRIBUTE",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "GRANTEE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(97),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(170),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "PRIVILEGE_TYPE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(21),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "user_privileges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "IS_GRANTABLE",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:   "VIEW_DEFINITION",
					Type:   ast.TypeName{Name: "longtext"},
					Length: toPointer(4294967295),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:   "CHECK_OPTION",
					Type:   ast.TypeName{Name: "enum"},
					Length: toPointer(8),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:   "IS_UPDATABLE",
					Type:   ast.TypeName{Name: "enum"},
					Length: toPointer(3),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:   "DEFINER",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(288),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:   "SECURITY_TYPE",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(7),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:      "CHARACTER_SET_CLIENT",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "views",
			},
			Columns: []*catalog.Column{
				{
					Name:      "COLLATION_CONNECTION",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_routine_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "SPECIFIC_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "VIEW_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "VIEW_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "VIEW_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_CATALOG",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_SCHEMA",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "information_schema",
				Name:    "view_table_usage",
			},
			Columns: []*catalog.Column{
				{
					Name:      "TABLE_NAME",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
	}
	return s
}
