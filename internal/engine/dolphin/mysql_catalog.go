// Code generated by sqlc-dolphin-gen. DO NOT EDIT.

package dolphin

import (
	"github.com/sqlc-dev/sqlc/internal/sql/ast"
	"github.com/sqlc-dev/sqlc/internal/sql/catalog"
)

var funcsgenMysqlCatalog = []*catalog.Function{}

func genMysqlCatalog() *catalog.Schema {
	s := &catalog.Schema{Name: "mysql"}
	s.Funcs = funcsgenMysqlCatalog
	s.Tables = []*catalog.Table{
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "columns_priv",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Db",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Table_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Column_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Timestamp",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "Column_priv",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(31),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "component",
			},
			Columns: []*catalog.Column{
				{
					Name:      "component_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "component_group_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "component_urn",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "db",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Db",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Select_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Insert_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Update_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Delete_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Drop_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Grant_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "References_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Index_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Alter_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_tmp_table_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Lock_tables_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_view_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Show_view_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_routine_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Alter_routine_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Execute_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Event_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Trigger_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "default_roles",
			},
			Columns: []*catalog.Column{
				{
					Name:      "HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "DEFAULT_ROLE_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "DEFAULT_ROLE_USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "engine_cost",
			},
			Columns: []*catalog.Column{
				{
					Name:      "engine_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "device_type",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "cost_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name: "cost_value",
					Type: ast.TypeName{Name: "float"},
				},
				{
					Name:      "last_update",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:   "comment",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1024),
				},
				{
					Name: "default_value",
					Type: ast.TypeName{Name: "float"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "func",
			},
			Columns: []*catalog.Column{
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "ret",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "dl",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(128),
				},
				{
					Name:      "type",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "general_log",
			},
			Columns: []*catalog.Column{
				{
					Name:      "event_time",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "user_host",
					Type:      ast.TypeName{Name: "mediumtext"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
				{
					Name:      "thread_id",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "server_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "command_type",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "argument",
					Type:      ast.TypeName{Name: "mediumblob"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "global_grants",
			},
			Columns: []*catalog.Column{
				{
					Name:      "USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "PRIV",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "WITH_GRANT_OPTION",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "gtid_executed",
			},
			Columns: []*catalog.Column{
				{
					Name:      "source_uuid",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(36),
				},
				{
					Name:      "interval_start",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "interval_end",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "gtid_tag",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "help_category",
			},
			Columns: []*catalog.Column{
				{
					Name:      "help_category_id",
					Type:      ast.TypeName{Name: "smallint"},
					IsNotNull: true,
				},
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name: "parent_category_id",
					Type: ast.TypeName{Name: "smallint"},
				},
				{
					Name:      "url",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "help_keyword",
			},
			Columns: []*catalog.Column{
				{
					Name:      "help_keyword_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "help_relation",
			},
			Columns: []*catalog.Column{
				{
					Name:      "help_topic_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "help_keyword_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "help_topic",
			},
			Columns: []*catalog.Column{
				{
					Name:      "help_topic_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "help_category_id",
					Type:      ast.TypeName{Name: "smallint"},
					IsNotNull: true,
				},
				{
					Name:      "description",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "example",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "url",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "innodb_index_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "database_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "table_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(199),
				},
				{
					Name:      "index_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "last_update",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "stat_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "stat_value",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name: "sample_size",
					Type: ast.TypeName{Name: "bigint"},
				},
				{
					Name:      "stat_description",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(1024),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "innodb_table_stats",
			},
			Columns: []*catalog.Column{
				{
					Name:      "database_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "table_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(199),
				},
				{
					Name:      "last_update",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "n_rows",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "clustered_index_size",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "sum_of_other_index_sizes",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "ndb_binlog_index",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Position",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "File",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "epoch",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "inserts",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "updates",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "deletes",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "schemaops",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "orig_server_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "orig_epoch",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "gci",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "next_position",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "next_file",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "password_history",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Password_timestamp",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:   "Password",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "plugin",
			},
			Columns: []*catalog.Column{
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "dl",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(128),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "procs_priv",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Db",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Routine_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Routine_type",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
				{
					Name:      "Grantor",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
				{
					Name:      "Proc_priv",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(27),
				},
				{
					Name:      "Timestamp",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "proxies_priv",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Proxied_host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Proxied_user",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "With_grant",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Grantor",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
				{
					Name:      "Timestamp",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "replication_asynchronous_connection_failover",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Channel_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Port",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Network_namespace",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Weight",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Managed_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "replication_asynchronous_connection_failover_managed",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Channel_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Managed_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Managed_type",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name: "Configuration",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "replication_group_configuration_version",
			},
			Columns: []*catalog.Column{
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "version",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "replication_group_member_actions",
			},
			Columns: []*catalog.Column{
				{
					Name:      "name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "event",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "enabled",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "type",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "priority",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "error_handling",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "role_edges",
			},
			Columns: []*catalog.Column{
				{
					Name:      "FROM_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "FROM_USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "TO_HOST",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "TO_USER",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "WITH_ADMIN_OPTION",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "server_cost",
			},
			Columns: []*catalog.Column{
				{
					Name:      "cost_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name: "cost_value",
					Type: ast.TypeName{Name: "float"},
				},
				{
					Name:      "last_update",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:   "comment",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(1024),
				},
				{
					Name: "default_value",
					Type: ast.TypeName{Name: "float"},
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "servers",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Server_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Db",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Username",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Password",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Port",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Socket",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Wrapper",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Owner",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "slave_master_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Number_of_lines",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Master_log_name",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Master_log_pos",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:   "Host",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
				{
					Name:   "User_name",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "User_password",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Port",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Connect_retry",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Enabled_ssl",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:   "Ssl_ca",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ssl_capath",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ssl_cert",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ssl_cipher",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ssl_key",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Ssl_verify_server_cert",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Heartbeat",
					Type:      ast.TypeName{Name: "float"},
					IsNotNull: true,
				},
				{
					Name:   "Bind",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ignored_server_ids",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Uuid",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Retry_count",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:   "Ssl_crl",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Ssl_crlpath",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Enabled_auto_position",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Channel_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:   "Tls_version",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:   "Public_key_path",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Get_public_key",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:   "Network_namespace",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Master_compression_algorithm",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Master_zstd_compression_level",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:   "Tls_ciphersuites",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "Source_connection_auto_failover",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Gtid_only",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "slave_relay_log_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Number_of_lines",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:   "Relay_log_name",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name: "Relay_log_pos",
					Type: ast.TypeName{Name: "bigint"},
				},
				{
					Name:   "Master_log_name",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name: "Master_log_pos",
					Type: ast.TypeName{Name: "bigint"},
				},
				{
					Name: "Sql_delay",
					Type: ast.TypeName{Name: "int"},
				},
				{
					Name: "Number_of_workers",
					Type: ast.TypeName{Name: "int"},
				},
				{
					Name: "Id",
					Type: ast.TypeName{Name: "int"},
				},
				{
					Name:      "Channel_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:   "Privilege_checks_username",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(32),
				},
				{
					Name:   "Privilege_checks_hostname",
					Type:   ast.TypeName{Name: "varchar"},
					Length: toPointer(255),
				},
				{
					Name:      "Require_row_format",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Require_table_primary_key_check",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(8),
				},
				{
					Name:      "Assign_gtids_to_anonymous_transactions_type",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(5),
				},
				{
					Name:   "Assign_gtids_to_anonymous_transactions_value",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "slave_worker_info",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Relay_log_name",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Relay_log_pos",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Master_log_name",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Master_log_pos",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Checkpoint_relay_log_name",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Checkpoint_relay_log_pos",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Checkpoint_master_log_name",
					Type:      ast.TypeName{Name: "text"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Checkpoint_master_log_pos",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Checkpoint_seqno",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Checkpoint_group_size",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Checkpoint_group_bitmap",
					Type:      ast.TypeName{Name: "blob"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "Channel_name",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "slow_log",
			},
			Columns: []*catalog.Column{
				{
					Name:      "start_time",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "user_host",
					Type:      ast.TypeName{Name: "mediumtext"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
				{
					Name:      "query_time",
					Type:      ast.TypeName{Name: "time"},
					IsNotNull: true,
				},
				{
					Name:      "lock_time",
					Type:      ast.TypeName{Name: "time"},
					IsNotNull: true,
				},
				{
					Name:      "rows_sent",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "rows_examined",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "db",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(512),
				},
				{
					Name:      "last_insert_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "insert_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "server_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "sql_text",
					Type:      ast.TypeName{Name: "mediumblob"},
					IsNotNull: true,
					Length:    toPointer(16777215),
				},
				{
					Name:      "thread_id",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "tables_priv",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "Db",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Table_name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Grantor",
					Type:      ast.TypeName{Name: "varchar"},
					IsNotNull: true,
					Length:    toPointer(288),
				},
				{
					Name:      "Timestamp",
					Type:      ast.TypeName{Name: "timestamp"},
					IsNotNull: true,
				},
				{
					Name:      "Table_priv",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(98),
				},
				{
					Name:      "Column_priv",
					Type:      ast.TypeName{Name: "set"},
					IsNotNull: true,
					Length:    toPointer(31),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "time_zone",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Time_zone_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Use_leap_seconds",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "time_zone_leap_second",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Transition_time",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Correction",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "time_zone_name",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Name",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:      "Time_zone_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "time_zone_transition",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Time_zone_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Transition_time",
					Type:      ast.TypeName{Name: "bigint"},
					IsNotNull: true,
				},
				{
					Name:      "Transition_type_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "time_zone_transition_type",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Time_zone_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Transition_type_id",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Offset",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "Is_DST",
					Type:      ast.TypeName{Name: "tinyint"},
					IsNotNull: true,
				},
				{
					Name:      "Abbreviation",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(8),
				},
			},
		},
		{
			Rel: &ast.TableName{
				Catalog: "public",
				Schema:  "mysql",
				Name:    "user",
			},
			Columns: []*catalog.Column{
				{
					Name:      "Host",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(255),
				},
				{
					Name:      "User",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(32),
				},
				{
					Name:      "Select_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Insert_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Update_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Delete_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Drop_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Reload_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Shutdown_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Process_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "File_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Grant_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "References_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Index_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Alter_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Show_db_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Super_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_tmp_table_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Lock_tables_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Execute_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Repl_slave_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Repl_client_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_view_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Show_view_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_routine_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Alter_routine_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_user_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Event_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Trigger_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_tablespace_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "ssl_type",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(9),
				},
				{
					Name:      "ssl_cipher",
					Type:      ast.TypeName{Name: "blob"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "x509_issuer",
					Type:      ast.TypeName{Name: "blob"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "x509_subject",
					Type:      ast.TypeName{Name: "blob"},
					IsNotNull: true,
					Length:    toPointer(65535),
				},
				{
					Name:      "max_questions",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "max_updates",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "max_connections",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "max_user_connections",
					Type:      ast.TypeName{Name: "int"},
					IsNotNull: true,
				},
				{
					Name:      "plugin",
					Type:      ast.TypeName{Name: "char"},
					IsNotNull: true,
					Length:    toPointer(64),
				},
				{
					Name:   "authentication_string",
					Type:   ast.TypeName{Name: "text"},
					Length: toPointer(65535),
				},
				{
					Name:      "password_expired",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name: "password_last_changed",
					Type: ast.TypeName{Name: "timestamp"},
				},
				{
					Name: "password_lifetime",
					Type: ast.TypeName{Name: "smallint"},
				},
				{
					Name:      "account_locked",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Create_role_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name:      "Drop_role_priv",
					Type:      ast.TypeName{Name: "enum"},
					IsNotNull: true,
					Length:    toPointer(1),
				},
				{
					Name: "Password_reuse_history",
					Type: ast.TypeName{Name: "smallint"},
				},
				{
					Name: "Password_reuse_time",
					Type: ast.TypeName{Name: "smallint"},
				},
				{
					Name:   "Password_require_current",
					Type:   ast.TypeName{Name: "enum"},
					Length: toPointer(1),
				},
				{
					Name: "User_attributes",
					Type: ast.TypeName{Name: "json"},
				},
			},
		},
	}
	return s
}
