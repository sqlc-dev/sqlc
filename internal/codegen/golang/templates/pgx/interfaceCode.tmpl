{{define "interfaceCodePgx"}}
    type Querier interface {
    {{- if .UseInterfaceReturnTypes}}
        WithTx(tx pgx.Tx) Querier
    {{- else -}}
        WithTx(tx pgx.Tx) *Queries
    {{- end}}
    {{- $dbtxParam := .EmitMethodsWithDBArgument -}}
    {{- range .GoQueries}}
        {{- if and (eq .Cmd ":one") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) ({{.Ret.DefineType}}, error)
        {{- else if eq .Cmd ":one" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) ({{.Ret.DefineType}}, error)
        {{- end}}
        {{- if and (eq .Cmd ":many") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) ([]{{.Ret.DefineType}}, error)
        {{- else if eq .Cmd ":many" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) ([]{{.Ret.DefineType}}, error)
        {{- end}}
        {{- if and (eq .Cmd ":exec") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) error
        {{- else if eq .Cmd ":exec" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) error
        {{- end}}
        {{- if and (eq .Cmd ":execrows") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) (int64, error)
        {{- else if eq .Cmd ":execrows" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) (int64, error)
        {{- end}}
        {{- if and (eq .Cmd ":execresult") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.Pair}}) (pgconn.CommandTag, error)
        {{- else if eq .Cmd ":execresult" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.Pair}}) (pgconn.CommandTag, error)
        {{- end}}
        {{- if and (eq .Cmd ":copyfrom") ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.SlicePair}}) (int64, error)
        {{- else if eq .Cmd ":copyfrom" }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.SlicePair}}) (int64, error)
        {{- end}}
        {{- if and (or (eq .Cmd ":batchexec") (eq .Cmd ":batchmany") (eq .Cmd ":batchone")) ($dbtxParam) }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, db DBTX, {{.Arg.SlicePair}}) *{{.MethodName}}BatchResults
        {{- else if or (eq .Cmd ":batchexec") (eq .Cmd ":batchmany") (eq .Cmd ":batchone") }}
            {{range .Comments}}//{{.}}
            {{end -}}
            {{.MethodName}}(ctx context.Context, {{.Arg.SlicePair}}) *{{.MethodName}}BatchResults
        {{- end}}

    {{- end}}
    }

    var _ Querier = (*Queries)(nil)
{{end}}
