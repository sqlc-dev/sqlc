// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/ydb-platform/ydb-go-sdk/v3"
	"github.com/ydb-platform/ydb-go-sdk/v3/pkg/xerrors"
	"github.com/ydb-platform/ydb-go-sdk/v3/query"
)

const multiFrom = `-- name: MultiFrom :many
SELECT email FROM bar, foo WHERE login = $login
`

func (q *Queries) MultiFrom(ctx context.Context, login string, opts ...query.ExecuteOption) ([]string, error) {
	parameters := ydb.ParamsBuilder()
	parameters = parameters.Param("$login").Text(login)
	result, err := q.db.QueryResultSet(ctx, multiFrom,
		append(opts, query.WithParameters(parameters.Build()))...,
	)
	if err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	var items []string
	for row, err := range result.Rows(ctx) {
		if err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		var email string
		if err := row.Scan(&email); err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		items = append(items, email)
	}
	if err := result.Close(ctx); err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	return items, nil
}
