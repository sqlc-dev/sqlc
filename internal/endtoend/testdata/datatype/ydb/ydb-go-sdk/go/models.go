// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package datatype

import (
	"time"

	"github.com/google/uuid"
	"github.com/ydb-platform/ydb-go-sdk/v3/table/types"
)

type DtBoolean struct {
	ID int32
	A  *bool
}

type DtBooleanNotNull struct {
	ID int32
	A  bool
}

type DtCharacter struct {
	ID int32
	A  *[]byte
	B  *string
}

type DtCharacterNotNull struct {
	ID int32
	A  []byte
	B  string
}

type DtDatetime struct {
	ID int32
	A  *time.Time
	B  *time.Time
	C  *time.Time
	D  *time.Time
	E  *time.Time
	F  *time.Time
	G  *time.Duration
	H  *time.Duration
	I  *time.Time
	J  *time.Time
	K  *time.Time
}

type DtDatetimeNotNull struct {
	ID int32
	A  time.Time
	B  time.Time
	C  time.Time
	D  time.Time
	E  time.Time
	F  time.Time
	G  time.Duration
	H  time.Duration
	I  time.Time
	J  time.Time
	K  time.Time
}

type DtJson struct {
	ID int32
	A  *string
	B  *string
	C  *[]byte
}

type DtJsonNotNull struct {
	ID int32
	A  string
	B  string
	C  []byte
}

type DtNumeric struct {
	ID int32
	A  *int8
	B  *int16
	C  *int32
	D  *int64
	E  *uint8
	F  *uint16
	G  *uint32
	H  *uint64
	I  *float32
	J  *float64
	K  *types.Decimal
	L  *types.Decimal
	N  *int16
	O  *int16
	P  *int32
	Q  *int32
	R  *int64
	S  *int64
}

type DtNumericNotNull struct {
	ID int32
	A  int8
	B  int16
	C  int32
	D  int64
	E  uint8
	F  uint16
	G  uint32
	H  uint64
	I  float32
	J  float64
	K  types.Decimal
	L  types.Decimal
	N  int16
	O  int16
	P  int32
	Q  int32
	R  int64
	S  int64
}

type DtUuid struct {
	ID int32
	A  *uuid.UUID
}

type DtUuidNotNull struct {
	ID int32
	A  uuid.UUID
}
