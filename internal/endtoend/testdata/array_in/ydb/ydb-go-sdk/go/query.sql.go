// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/ydb-platform/ydb-go-sdk/v3"
	"github.com/ydb-platform/ydb-go-sdk/v3/pkg/xerrors"
	"github.com/ydb-platform/ydb-go-sdk/v3/query"
)

const in = `-- name: In :many
SELECT id
FROM bar
WHERE id IN ($p1, $p2)
`

type InParams struct {
	P1 int32
	P2 int32
}

func (q *Queries) In(ctx context.Context, arg InParams, opts ...query.ExecuteOption) ([]int32, error) {
	parameters := ydb.ParamsBuilder()
	parameters = parameters.Param("$p1").Int32(arg.P1)
	parameters = parameters.Param("$p2").Int32(arg.P2)
	result, err := q.db.QueryResultSet(ctx, in,
		append(opts, query.WithParameters(parameters.Build()))...,
	)
	if err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	var items []int32
	for row, err := range result.Rows(ctx) {
		if err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		var id int32
		if err := row.Scan(&id); err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		items = append(items, id)
	}
	if err := result.Close(ctx); err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	return items, nil
}
