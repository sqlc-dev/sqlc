// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/ydb-platform/ydb-go-sdk/v3/pkg/xerrors"
	"github.com/ydb-platform/ydb-go-sdk/v3/query"
)

const withAs = `-- name: WithAs :one
SELECT 1 AS x, 2 AS y
`

type WithAsRow struct {
	X int32
	Y int32
}

func (q *Queries) WithAs(ctx context.Context, opts ...query.ExecuteOption) (WithAsRow, error) {
	row, err := q.db.QueryRow(ctx, withAs, opts...)
	var i WithAsRow
	if err != nil {
		return i, xerrors.WithStackTrace(err)
	}
	err = row.Scan(&i.X, &i.Y)
	if err != nil {
		return i, xerrors.WithStackTrace(err)
	}
	return i, nil
}

const withoutAs = `-- name: WithoutAs :one
SELECT 1 x, 2 y
`

type WithoutAsRow struct {
	X int32
	Y int32
}

func (q *Queries) WithoutAs(ctx context.Context, opts ...query.ExecuteOption) (WithoutAsRow, error) {
	row, err := q.db.QueryRow(ctx, withoutAs, opts...)
	var i WithoutAsRow
	if err != nil {
		return i, xerrors.WithStackTrace(err)
	}
	err = row.Scan(&i.X, &i.Y)
	if err != nil {
		return i, xerrors.WithStackTrace(err)
	}
	return i, nil
}
