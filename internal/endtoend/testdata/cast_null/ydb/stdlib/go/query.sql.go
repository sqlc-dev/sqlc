// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"
	"time"
)

const listNullable = `-- name: ListNullable :many
SELECT
  Cast(NULL AS Text?) AS a,
  Cast(NULL AS Int32?) AS b,
  Cast(NULL AS Int64?) AS c,
  Cast(NULL AS DateTime?) AS d
FROM foo
`

type ListNullableRow struct {
	A *string
	B *int32
	C *int64
	D *time.Time
}

func (q *Queries) ListNullable(ctx context.Context) ([]ListNullableRow, error) {
	rows, err := q.db.QueryContext(ctx, listNullable)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListNullableRow
	for rows.Next() {
		var i ListNullableRow
		if err := rows.Scan(
			&i.A,
			&i.B,
			&i.C,
			&i.D,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
