// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"
)

const selectBars = `-- name: SelectBars :many
SELECT foo, baz FROM bar_fn()
`

func (q *Queries) SelectBars(ctx context.Context) ([]Bar, error) {
	rows, err := q.db.Query(ctx, selectBars)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Bar
	for rows.Next() {
		var i Bar
		if err := rows.Scan(&i.Foo, &i.Baz); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const selectFoos = `-- name: SelectFoos :many
SELECT foo_fn FROM foo_fn()
`

func (q *Queries) SelectFoos(ctx context.Context) ([]NullFoo, error) {
	rows, err := q.db.Query(ctx, selectFoos)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []NullFoo
	for rows.Next() {
		var foo_fn NullFoo
		if err := rows.Scan(&foo_fn); err != nil {
			return nil, err
		}
		items = append(items, foo_fn)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
