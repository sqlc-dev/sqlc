// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/sqlc-dev/sqlc-testdata/pkg"
)

const getData = `-- name: GetData :many
SELECT baz, CAST(max(bar) AS REAL) AS result FROM foo
`

type GetDataRow struct {
	Baz    int64
	Result pkg.CustomType
}

func (q *Queries) GetData(ctx context.Context) ([]GetDataRow, error) {
	rows, err := q.db.QueryContext(ctx, getData)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetDataRow
	for rows.Next() {
		var i GetDataRow
		if err := rows.Scan(&i.Baz, &i.Result); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
