// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package querytest

import (
	"context"
)

const authorHasBio = `-- name: AuthorHasBio :many
SELECT a.name, (a.bio is not null) as has_bio FROM authors a
`

type AuthorHasBioRow struct {
	Name   string
	HasBio bool
}

func (q *Queries) AuthorHasBio(ctx context.Context) ([]AuthorHasBioRow, error) {
	rows, err := q.db.Query(ctx, authorHasBio)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []AuthorHasBioRow
	for rows.Next() {
		var i AuthorHasBioRow
		if err := rows.Scan(&i.Name, &i.HasBio); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
