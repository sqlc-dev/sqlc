// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"
)

const selectJoinUsing = `-- name: SelectJoinUsing :many
SELECT t1.fk, SUM(t2.fk) FROM t1 JOIN t2 USING (fk) GROUP BY t1.fk
`

type SelectJoinUsingRow struct {
	Fk  int32
	Sum interface{}
}

func (q *Queries) SelectJoinUsing(ctx context.Context) ([]SelectJoinUsingRow, error) {
	rows, err := q.db.QueryContext(ctx, selectJoinUsing)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SelectJoinUsingRow
	for rows.Next() {
		var i SelectJoinUsingRow
		if err := rows.Scan(&i.Fk, &i.Sum); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
