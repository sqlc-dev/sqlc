// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/ydb-platform/ydb-go-sdk/v3"
	"github.com/ydb-platform/ydb-go-sdk/v3/pkg/xerrors"
	"github.com/ydb-platform/ydb-go-sdk/v3/query"
)

const barNotExists = `-- name: BarNotExists :one
SELECT
    NOT EXISTS (
        SELECT
            1
        FROM
            bar
        where
            id = $id
    )
`

func (q *Queries) BarNotExists(ctx context.Context, id int32, opts ...query.ExecuteOption) (bool, error) {
	parameters := ydb.ParamsBuilder()
	parameters = parameters.Param("$id").Int32(id)
	row, err := q.db.QueryRow(ctx, barNotExists,
		append(opts, query.WithParameters(parameters.Build()))...,
	)
	var not_exists bool
	if err != nil {
		return not_exists, xerrors.WithStackTrace(err)
	}
	err = row.Scan(&not_exists)
	if err != nil {
		return not_exists, xerrors.WithStackTrace(err)
	}
	return not_exists, nil
}
