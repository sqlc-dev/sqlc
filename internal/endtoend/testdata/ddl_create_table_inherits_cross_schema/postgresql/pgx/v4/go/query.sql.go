// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"
)

const getAllParties = `-- name: GetAllParties :many
SELECT party_id, name FROM parent.party
`

func (q *Queries) GetAllParties(ctx context.Context) ([]ParentParty, error) {
	rows, err := q.db.Query(ctx, getAllParties)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ParentParty
	for rows.Next() {
		var i ParentParty
		if err := rows.Scan(&i.PartyID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getAllPeople = `-- name: GetAllPeople :many
SELECT party_id, name, first_name, last_name FROM child.person
`

func (q *Queries) GetAllPeople(ctx context.Context) ([]ChildPerson, error) {
	rows, err := q.db.Query(ctx, getAllPeople)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ChildPerson
	for rows.Next() {
		var i ChildPerson
		if err := rows.Scan(
			&i.PartyID,
			&i.Name,
			&i.FirstName,
			&i.LastName,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
