// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: query.sql

package querytest

import (
	"context"

	"github.com/ydb-platform/ydb-go-sdk/v3"
	"github.com/ydb-platform/ydb-go-sdk/v3/pkg/xerrors"
	"github.com/ydb-platform/ydb-go-sdk/v3/query"
)

const selectTextArray = `-- name: SelectTextArray :many
SELECT CAST($param AS List<Text>)
`

func (q *Queries) SelectTextArray(ctx context.Context, param []string, opts ...query.ExecuteOption) ([][]string, error) {
	parameters := ydb.ParamsBuilder()
	var list = parameters.Param("$param").BeginList()
	for _, param := range param {
		list = list.Add().Text(param)
	}
	parameters = list.EndList()
	result, err := q.db.QueryResultSet(ctx, selectTextArray,
		append(opts, query.WithParameters(parameters.Build()))...,
	)
	if err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	var items [][]string
	for row, err := range result.Rows(ctx) {
		if err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		var column_1 []string
		if err := row.Scan(&column_1); err != nil {
			return nil, xerrors.WithStackTrace(err)
		}
		items = append(items, column_1)
	}
	if err := result.Close(ctx); err != nil {
		return nil, xerrors.WithStackTrace(err)
	}
	return items, nil
}
